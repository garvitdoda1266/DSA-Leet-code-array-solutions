Find all valid combinations of k numbers that sum up to n such that the following conditions are true:

Only numbers 1 through 9 are used.
Each number is used at most once.
Return a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.


CODE:-

 vector<vector<int>> gar;
    
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> g;
        int start=1;
        int sum=0;
        find(start,k,n,g,sum);
        return gar;
    }
    void find(int start,int k,int n,vector<int> g,int sum){
        if(g.size()==k&&sum==n){
            gar.push_back(g);
            return;
        }
        else if(g.size()>k||sum>n){
            return;
        }
            for(int i=start;i<=9;i++){
                g.push_back(i);
                sum=sum+i;
                find(i+1,k,n,g,sum);
                sum=sum-i;
                g.pop_back();
            }
    }
    
    //O(n)
