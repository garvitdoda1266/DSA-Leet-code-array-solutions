Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values. (i.e., from left to right, level by level from leaf to root).

CODE:-
   vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if(root == NULL) return ans;
        
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        
        vector<int> temp2;
        
        while(!q.empty()){
            
            TreeNode* temp = q.front(); 
            q.pop();
            
            if(temp == NULL){
                ans.push_back(temp2);
                temp2.clear();
                if(!q.empty()) q.push(NULL);
            }
            else{
                cout<<temp->val<<" ";
                temp2.push_back(temp->val);
                if(temp->left != NULL) q.push(temp->left);
                if(temp->right != NULL) q.push(temp->right);
            }
        }
        
        reverse(ans.begin(),ans.end());
        
        return ans;
    }
    
    //o(n)
